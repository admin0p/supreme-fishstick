// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/GenericFrames.proto

package dataframe

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ACK Frame to send any sort of ack
type ACK_FRAME struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PackId        int64                  `protobuf:"varint,1,opt,name=packId,proto3" json:"packId,omitempty"`       // unique identifier for the packet
	StreamId      int32                  `protobuf:"varint,2,opt,name=streamId,proto3" json:"streamId,omitempty"`   // stream identifier
	AckStatus     bool                   `protobuf:"varint,3,opt,name=ackStatus,proto3" json:"ackStatus,omitempty"` // true for success, false for failure
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ACK_FRAME) Reset() {
	*x = ACK_FRAME{}
	mi := &file_proto_GenericFrames_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ACK_FRAME) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACK_FRAME) ProtoMessage() {}

func (x *ACK_FRAME) ProtoReflect() protoreflect.Message {
	mi := &file_proto_GenericFrames_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACK_FRAME.ProtoReflect.Descriptor instead.
func (*ACK_FRAME) Descriptor() ([]byte, []int) {
	return file_proto_GenericFrames_proto_rawDescGZIP(), []int{0}
}

func (x *ACK_FRAME) GetPackId() int64 {
	if x != nil {
		return x.PackId
	}
	return 0
}

func (x *ACK_FRAME) GetStreamId() int32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *ACK_FRAME) GetAckStatus() bool {
	if x != nil {
		return x.AckStatus
	}
	return false
}

// This is a generic error frame that the server sends to the client on any error
type ERROR_FRAME struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SfClientId    string                 `protobuf:"bytes,1,opt,name=sfClientId,proto3" json:"sfClientId,omitempty"`     // client identifier
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                 // type of err
	MessageFrame  string                 `protobuf:"bytes,3,opt,name=messageFrame,proto3" json:"messageFrame,omitempty"` // message frame that caused the error
	Stack         string                 `protobuf:"bytes,4,opt,name=stack,proto3" json:"stack,omitempty"`               // stack trace
	PackId        int64                  `protobuf:"varint,5,opt,name=packId,proto3" json:"packId,omitempty"`            // unique identifier for the message
	Code          int32                  `protobuf:"varint,6,opt,name=code,proto3" json:"code,omitempty"`                // error code
	StreamId      int32                  `protobuf:"varint,7,opt,name=streamId,proto3" json:"streamId,omitempty"`        // stream identifier
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ERROR_FRAME) Reset() {
	*x = ERROR_FRAME{}
	mi := &file_proto_GenericFrames_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ERROR_FRAME) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ERROR_FRAME) ProtoMessage() {}

func (x *ERROR_FRAME) ProtoReflect() protoreflect.Message {
	mi := &file_proto_GenericFrames_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ERROR_FRAME.ProtoReflect.Descriptor instead.
func (*ERROR_FRAME) Descriptor() ([]byte, []int) {
	return file_proto_GenericFrames_proto_rawDescGZIP(), []int{1}
}

func (x *ERROR_FRAME) GetSfClientId() string {
	if x != nil {
		return x.SfClientId
	}
	return ""
}

func (x *ERROR_FRAME) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ERROR_FRAME) GetMessageFrame() string {
	if x != nil {
		return x.MessageFrame
	}
	return ""
}

func (x *ERROR_FRAME) GetStack() string {
	if x != nil {
		return x.Stack
	}
	return ""
}

func (x *ERROR_FRAME) GetPackId() int64 {
	if x != nil {
		return x.PackId
	}
	return 0
}

func (x *ERROR_FRAME) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ERROR_FRAME) GetStreamId() int32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

// actual message frame
type MESSAGE_FRAME struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`                 // token for authentication
	MessageId     string                 `protobuf:"bytes,2,opt,name=messageId,proto3" json:"messageId,omitempty"`         // unique identifier for the message
	From          string                 `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`                   // client ID ( the ID provided by the client )
	To            string                 `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`                       // client ID | SERVER ( the ID provided by the client )
	Type          string                 `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`                   // type of message ( e.g. text, image, file, etc. )
	Timestamp     string                 `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`         // timestamp of the message in ISO 8601 format
	MessageFormat string                 `protobuf:"bytes,7,opt,name=messageFormat,proto3" json:"messageFormat,omitempty"` // format of the message ( e.g. text, json, xml, etc. )
	Message       string                 `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`             // the actual message content
	PackId        int64                  `protobuf:"varint,9,opt,name=packId,proto3" json:"packId,omitempty"`              // unique identifier for the message
	StreamId      int32                  `protobuf:"varint,10,opt,name=streamId,proto3" json:"streamId,omitempty"`         // stream identifier
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MESSAGE_FRAME) Reset() {
	*x = MESSAGE_FRAME{}
	mi := &file_proto_GenericFrames_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MESSAGE_FRAME) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MESSAGE_FRAME) ProtoMessage() {}

func (x *MESSAGE_FRAME) ProtoReflect() protoreflect.Message {
	mi := &file_proto_GenericFrames_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MESSAGE_FRAME.ProtoReflect.Descriptor instead.
func (*MESSAGE_FRAME) Descriptor() ([]byte, []int) {
	return file_proto_GenericFrames_proto_rawDescGZIP(), []int{2}
}

func (x *MESSAGE_FRAME) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *MESSAGE_FRAME) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MESSAGE_FRAME) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *MESSAGE_FRAME) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *MESSAGE_FRAME) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MESSAGE_FRAME) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *MESSAGE_FRAME) GetMessageFormat() string {
	if x != nil {
		return x.MessageFormat
	}
	return ""
}

func (x *MESSAGE_FRAME) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MESSAGE_FRAME) GetPackId() int64 {
	if x != nil {
		return x.PackId
	}
	return 0
}

func (x *MESSAGE_FRAME) GetStreamId() int32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

var File_proto_GenericFrames_proto protoreflect.FileDescriptor

const file_proto_GenericFrames_proto_rawDesc = "" +
	"\n" +
	"\x19proto/GenericFrames.proto\x12\tDataFrame\"]\n" +
	"\tACK_FRAME\x12\x16\n" +
	"\x06packId\x18\x01 \x01(\x03R\x06packId\x12\x1a\n" +
	"\bstreamId\x18\x02 \x01(\x05R\bstreamId\x12\x1c\n" +
	"\tackStatus\x18\x03 \x01(\bR\tackStatus\"\xc3\x01\n" +
	"\vERROR_FRAME\x12\x1e\n" +
	"\n" +
	"sfClientId\x18\x01 \x01(\tR\n" +
	"sfClientId\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\"\n" +
	"\fmessageFrame\x18\x03 \x01(\tR\fmessageFrame\x12\x14\n" +
	"\x05stack\x18\x04 \x01(\tR\x05stack\x12\x16\n" +
	"\x06packId\x18\x05 \x01(\x03R\x06packId\x12\x12\n" +
	"\x04code\x18\x06 \x01(\x05R\x04code\x12\x1a\n" +
	"\bstreamId\x18\a \x01(\x05R\bstreamId\"\x8d\x02\n" +
	"\rMESSAGE_FRAME\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x12\x1c\n" +
	"\tmessageId\x18\x02 \x01(\tR\tmessageId\x12\x12\n" +
	"\x04from\x18\x03 \x01(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\x04 \x01(\tR\x02to\x12\x12\n" +
	"\x04type\x18\x05 \x01(\tR\x04type\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\tR\ttimestamp\x12$\n" +
	"\rmessageFormat\x18\a \x01(\tR\rmessageFormat\x12\x18\n" +
	"\amessage\x18\b \x01(\tR\amessage\x12\x16\n" +
	"\x06packId\x18\t \x01(\x03R\x06packId\x12\x1a\n" +
	"\bstreamId\x18\n" +
	" \x01(\x05R\bstreamIdB\x13Z\x11./proto;dataframeb\x06proto3"

var (
	file_proto_GenericFrames_proto_rawDescOnce sync.Once
	file_proto_GenericFrames_proto_rawDescData []byte
)

func file_proto_GenericFrames_proto_rawDescGZIP() []byte {
	file_proto_GenericFrames_proto_rawDescOnce.Do(func() {
		file_proto_GenericFrames_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_GenericFrames_proto_rawDesc), len(file_proto_GenericFrames_proto_rawDesc)))
	})
	return file_proto_GenericFrames_proto_rawDescData
}

var file_proto_GenericFrames_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_GenericFrames_proto_goTypes = []any{
	(*ACK_FRAME)(nil),     // 0: DataFrame.ACK_FRAME
	(*ERROR_FRAME)(nil),   // 1: DataFrame.ERROR_FRAME
	(*MESSAGE_FRAME)(nil), // 2: DataFrame.MESSAGE_FRAME
}
var file_proto_GenericFrames_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_GenericFrames_proto_init() }
func file_proto_GenericFrames_proto_init() {
	if File_proto_GenericFrames_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_GenericFrames_proto_rawDesc), len(file_proto_GenericFrames_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_GenericFrames_proto_goTypes,
		DependencyIndexes: file_proto_GenericFrames_proto_depIdxs,
		MessageInfos:      file_proto_GenericFrames_proto_msgTypes,
	}.Build()
	File_proto_GenericFrames_proto = out.File
	file_proto_GenericFrames_proto_goTypes = nil
	file_proto_GenericFrames_proto_depIdxs = nil
}
